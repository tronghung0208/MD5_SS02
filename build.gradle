plugins {
  id 'java'
  id 'war'
}

group 'ra'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')
// https://mvnrepository.com/artifact/org.springframework/spring-context
  implementation group: 'org.springframework', name: 'spring-context', version: '5.3.29'

// https://mvnrepository.com/artifact/org.springframework/spring-web
  implementation group: 'org.springframework', name: 'spring-web', version: '5.3.29'

// https://mvnrepository.com/artifact/org.springframework/spring-core
  implementation group: 'org.springframework', name: 'spring-core', version: '5.3.29'

// https://mvnrepository.com/artifact/org.springframework/spring-beans
  implementation group: 'org.springframework', name: 'spring-beans', version: '5.3.29'

// https://mvnrepository.com/artifact/org.springframework/spring-webmvc
  implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.29'


// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
  implementation group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.1.2.RELEASE'
// https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect
  implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.3.0'
// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core
  implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.4.0.Final'
// https://mvnrepository.com/artifact/org.projectlombok/lombok
  compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
  // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
  implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.2.0'

  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
useJUnitPlatform()}